{"version":3,"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions: {}|namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/pages/admin/admin.component.html","webpack:///src/app/pages/admin/admin.component.ts","webpack:///src/app/pages/admin/admin.service.ts","webpack:///src/app/pages/assessment-admin/assessment-admin.component.html","webpack:///src/app/pages/assessment-admin/assessment-admin.component.ts","webpack:///src/app/pages/finish-admin/finish-admin.component.ts","webpack:///src/app/pages/finish-admin/finish-admin.component.html","webpack:///src/app/pages/reports/reports.component.html","webpack:///src/app/pages/reports/reports.component.ts","webpack:///src/app/pages/reports/reports.service.ts","webpack:///src/app/pages/setup/setup.component.html","webpack:///src/app/pages/setup/setup.component.ts","webpack:///src/app/shared/environments/environment.ts","webpack:///src/app/shared/material/material.module.ts","webpack:///src/app/shared/services/assessor.service.ts","webpack:///src/app/shared/services/assessors.service.ts","webpack:///src/app/shared/services/checkNA.service.ts","webpack:///src/app/shared/services/city.service.ts","webpack:///src/app/shared/services/clusters.service.ts","webpack:///src/app/shared/services/current.service.ts","webpack:///src/app/shared/services/report.service.ts","webpack:///src/app/shared/services/review.service.ts","webpack:///src/app/shared/services/types.service.ts","webpack:///src/main.ts","webpack:///ignored|/Users/tariqsaeed/Documents/projects/gsk-admin/node_modules/xlsx|crypto","webpack:///ignored|/Users/tariqsaeed/Documents/projects/gsk-admin/node_modules/xlsx|fs","webpack:///ignored|/Users/tariqsaeed/Documents/projects/gsk-admin/node_modules/xlsx|stream"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","routes","path","redirectTo","pathMatch","component","AssessmentAdminComponent","FinishAdminComponent","SetupComponent","AdminComponent","ReportsComponent","AppRoutingModule","RouterModule","relativeLinkResolution","AppComponent","router","title","navigate","goHome","AppModule","BrowserModule","FormsModule","BrowserAnimationsModule","MaterialModule","HttpClientModule","assessorsService","currentService","adminService","currentAssessors","currentInterval","interval","sub1","Subscription","getAssessors","currentAssessors$","subscribe","data","val","deleteAssessorFN","toPromise","index","findIndex","a","assessor_id","splice","err","console","log","deleteAllAssessors","res","alert","resetFN","unsubscribe","newAssessmentFN","closeAssessments","deleteAllAssessorsFN","exportReports","AdminService","fileType","fileExtension","checkNAService","cityService","invalidTXT","isValidNA","getCities","cities","getCurrent","current$","current","emp_id","currentEmpType","emp_type","getCurrentIDs","getCurrentEmp","currentEmp","currentIDs","indexOf","currentEmpID","nextEmp","i","c","forEach","assessor","Number","status","length","checkNext","next","checkNA","a1","filter","q","a2","a3","b1","b2","getEmpByID","assessorID","revoteFN","city","find","newAssessment","reportsService","type","prepareReportsData","reportsData","getRawReport","allAssessors","allEmp","allReviews","rawReport","getScoredReport","scoredReport","exportReport","getAllByType","selectedEmp","mudID","toLowerCase","exportSingleReport","findEMP","ReportsService","http","post","environment","getAllAssessors","getTypeReviews","reportData","review","report","emp","m","Name","name","Assessor","Q1","Q2","Q3","Q4","Q5","Q6","comment","push","IDs","Set","map","reviews","r","office","toFixed","sum","Total","cols1","width","cols2","wb","sheet1","sheet2","excelBuffer","bookType","saveExcelFile","buffer","fileName","Blob","empReviews","clustersService","cityID","getClusters","clusters","citiesFiltered","updateCurrent","value","clusterID","production","typesAPI","assessorsAPI","currentAPI","empDataAPI","reviewAPI","updateCurrentAPI","clustersAPI","cityAPI","currentIDsAPI","nextEmpAPI","assessorLoginAPI","currentAssessorsAPI","revoteAPI","skipAPI","statusAPI","deleteAssessorAPI","deleteAllAssessorsAPI","resetAPI","NAcheckAPI","mrReviewsAPI","typeReviewsAPI","allAssessorsAPI","allMrAPI","allFllAPI","allByTypeAPI","A11yModule","CdkStepperModule","MatAutocompleteModule","MatButtonModule","MatCardModule","MatCheckboxModule","MatStepperModule","MatIconModule","MatInputModule","MatProgressSpinnerModule","MatSelectModule","MatTabsModule","PortalModule","MatGridListModule","MatToolbarModule","MatButtonToggleModule","AssessorService","AssessorsService","BehaviorSubject","get","CheckNAService","empID","empType","CityService","ClustersService","CurrentService","show$","show","currentCityID","of","ReportService","ReviewService","TypesService","url","enableProdMode","platformBrowser","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport {\n  AssessmentAdminComponent,\n  SetupComponent,\n  FinishAdminComponent,\n  AdminComponent,\n  ReportsComponent,\n} from \"./pages\";\n\nconst routes: Routes = [\n  { path: \"\", redirectTo: \"/admin\", pathMatch: \"full\" },\n  { path: \"assessment-admin\", component: AssessmentAdminComponent },\n  { path: \"finish-admin\", component: FinishAdminComponent },\n  { path: \"setup\", component: SetupComponent },\n  { path: \"admin\", component: AdminComponent },\n  { path: \"reports\", component: ReportsComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: \"legacy\" })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"],\n})\nexport class AppComponent {\n  title = \"gsk\";\n  constructor(private router: Router) {}\n  goHome() {\n    this.router.navigate([\"/admin\"]);\n  }\n}\n","<router-outlet></router-outlet>\n<img class=\"logo\" src=\"../assets/img/logo.png\" (click)=\"goHome()\" />\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport {\n  CUSTOM_ELEMENTS_SCHEMA,\n  NgModule,\n  NO_ERRORS_SCHEMA,\n} from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { MaterialModule } from \"./shared\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport {\n  AssessmentAdminComponent,\n  SetupComponent,\n  FinishAdminComponent,\n  AdminComponent,\n} from \"./pages\";\nimport { ReportsComponent } from './pages/reports/reports.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AssessmentAdminComponent,\n    SetupComponent,\n    FinishAdminComponent,\n    AdminComponent,\n    ReportsComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    HttpClientModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA],\n})\nexport class AppModule {}\n","<section\n  style=\"min-height: 500px; padding-top: 0 !important; padding-bottom: 50px\"\n>\n  <mat-grid-list cols=\"2\" style=\"margin-top: 0\">\n    <mat-grid-tile>\n      <div class=\"card\">\n        <h2>Shortcuts</h2>\n\n        <button\n          mat-flat-button\n          class=\"shortcut\"\n          color=\"primary\"\n          (click)=\"newAssessmentFN()\"\n        >\n          New Assessment</button\n        ><br />\n        <button\n          mat-stroked-button\n          class=\"shortcut\"\n          color=\"primary\"\n          (click)=\"closeAssessments()\"\n        >\n          Close All Assessments</button\n        ><br />\n        <button\n          mat-stroked-button\n          class=\"shortcut\"\n          color=\"primary\"\n          (click)=\"deleteAllAssessorsFN()\"\n        >\n          Logout All Assessors</button><br />\n        <button\n          mat-stroked-button\n          class=\"shortcut\"\n          color=\"primary\"\n          (click)=\"exportReports()\"\n        >\n          Extract Reports\n        </button>\n      </div>\n    </mat-grid-tile>\n    <mat-grid-tile>\n      <div class=\"card\">\n        <h2>Logged In Assessors</h2>\n\n        <mat-toolbar\n          style=\"margin-bottom: 10px\"\n          *ngFor=\"let assessor of currentAssessors\"\n        >\n          <mat-toolbar-row style=\"color: #333\">\n            <span style=\"font-weight: 300\">{{ assessor.name }}</span>\n            <span class=\"example-spacer\"></span>\n            <button mat-icon-button>\n              <mat-icon\n                class=\"example-icon\"\n                (click)=\"deleteAssessorFN(assessor.assessor_id)\"\n                >close</mat-icon\n              >\n            </button>\n          </mat-toolbar-row>\n        </mat-toolbar>\n      </div>\n    </mat-grid-tile>\n  </mat-grid-list>\n</section>\n","import { Component, OnInit } from \"@angular/core\";\nimport {\n  AssessorsService,\n  CurrentAssessor,\n  CurrentService,\n  ReportService,\n  Review,\n} from \"../../shared\";\nimport { interval, Subscription } from \"rxjs\";\nimport { Router } from \"@angular/router\";\nimport { AdminService } from \"./admin.service\";\n\n@Component({\n  selector: \"app-admin\",\n  templateUrl: \"./admin.component.html\",\n  styleUrls: [\"./admin.component.css\"],\n})\nexport class AdminComponent implements OnInit {\n  currentAssessors: CurrentAssessor[] = [];\n  currentInterval = interval(2000);\n  sub1: Subscription = new Subscription();\n\n  constructor(\n    private assessorsService: AssessorsService,\n    private currentService: CurrentService,\n    private router: Router,\n    private adminService: AdminService\n  ) {}\n\n  ngOnInit() {\n    this.getAssessors();\n  }\n\n  getAssessors() {\n    this.assessorsService.currentAssessors$.subscribe(\n      (data: CurrentAssessor[]) => {\n        this.currentAssessors = data;\n      }\n    );\n    this.sub1 = this.currentInterval.subscribe((val) =>\n      this.assessorsService.currentAssessors()\n    );\n  }\n\n  newAssessmentFN() {\n    this.router.navigate([\"/setup\"]);\n  }\n\n  deleteAssessorFN(id: number) {\n    this.assessorsService\n      .deleteAssessorFN(id)\n      .toPromise()\n      .then(() => {\n        const index = this.currentAssessors.findIndex(\n          (a) => a.assessor_id === id\n        );\n        this.currentAssessors.splice(index, 1);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  deleteAllAssessorsFN() {\n    this.assessorsService.deleteAllAssessors().subscribe(\n      (res) => {\n        this.currentAssessors = [];\n        alert(\"Success!\");\n        console.log(\"Delete All -> \", res);\n      },\n      (err) => console.log(\"Reset -> \", err)\n    );\n  }\n\n  closeAssessments() {\n    this.currentService.resetFN().subscribe(\n      (res) => {\n        alert(\"Success!\");\n        console.log(\"Reset -> \", res);\n      },\n      (err) => console.log(\"Reset -> \", err)\n    );\n  }\n\n  exportReports() {\n    this.router.navigate(['/reports'])\n  }\n\n  ngOnDestroy() {\n    this.sub1.unsubscribe();\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AdminService {\n  fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  fileExtension = \".xlsx\";\n\n  constructor() {}\n\n\n}\n","  <div class=\"container\">\n    <div class=\"empIMG\">\n      <img  src=\"assets/img/{{ currentEmp?.mudID }}.jpg\" onError=\"this.src='assets/img/photo.jpg'\" />\n      <br><br>\n      <div class=\"invalidNA\">{{ invalidTXT }}</div>\n      <button\n        mat-flat-button\n        color=\"primary\"\n        (click)=\"nextEmp()\"\n        [disabled]=\"!next || !isValidNA\"\n      >\n        Next\n      </button>\n    </div>\n    \n    <mat-card class=\"desc\" *ngIf=\"currentEmp\">\n      <h2>{{ currentEmp.name }}</h2>\n      <table class=\"empData\">\n        <tr>\n          <td class=\"titleTD\">MUD ID</td>\n          <td>{{ currentEmp.mudID }}</td>\n        </tr>\n        <tr>\n          <td class=\"titleTD\">Hiring Date</td>\n          <td>{{ currentEmp.hireDate }}</td>\n        </tr>\n        <tr>\n          <td class=\"titleTD\">FLSL</td>\n          <td>{{ currentEmp.flsl }}</td>\n        </tr>\n        <tr>\n          <td class=\"titleTD\">SLSL</td>\n          <td>{{ currentEmp.slsl }}</td>\n        </tr>\n        <tr>\n          <td class=\"titleTD\">Office</td>\n          <td>{{ currentEmp.office }}</td>\n        </tr>\n        <tr>\n          <td class=\"titleTD\">City</td>\n          <td>{{ getCity(currentEmp.cityID) }}</td>\n        </tr>\n      </table>\n    </mat-card>\n\n    <mat-card class=\"assessors\">\n      <h2>Assessors</h2>\n      <div class=\"assessorsCon\">\n        <mat-toolbar\n          style=\"margin-bottom: 10px;min-height: 50px!important;max-height: 50px!important;\"\n          *ngFor=\"let assessor of currentAssessors\"\n        >\n          <mat-toolbar-row style=\"color: #333;\">\n            <mat-icon class=\"example-icon\" *ngIf=\"assessor.status == 1\">\n              done\n            </mat-icon>\n            <span style=\"font-weight: 300\">{{ assessor.name }}</span>\n            <span class=\"example-spacer\"></span>\n            <button mat-icon-button>\n              <mat-icon\n                class=\"example-icon\"\n                *ngIf=\"assessor.status == 1\"\n                (click)=\"revoteFN(assessor.assessor_id)\"\n                >\n                replay\n              </mat-icon>\n            </button>\n            <button mat-icon-button>\n              <mat-icon\n                class=\"example-icon\"\n                (click)=\"deleteAssessorFN(assessor.assessor_id)\"\n                >\n                close\n              </mat-icon>\n            </button>\n          </mat-toolbar-row>\n        </mat-toolbar>\n      </div>\n\n      \n    </mat-card>\n  </div>\n\n  <ng-template #wait>\n    <div\n      class=\"card\"\n      style=\"\n        width: 90%;\n        max-width: 400px;\n        margin: 50px auto;\n        padding: 100px 20px 20px 20px;\n        position: relative;\n      \"\n    >\n      <h1 class=\"cardTitle\">Wait for next assessment...</h1>\n    </div>\n  </ng-template>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Subscription, interval } from \"rxjs\";\nimport {\n  CurrentService,\n  AssessorsService,\n  CurrentAssessor,\n  Current,\n  CheckNAService,\n  Review,\n  City,\n  CityService,\n} from \"../../shared\";\n\n@Component({\n  selector: \"app-assessment-admin\",\n  templateUrl: \"./assessment-admin.component.html\",\n  styleUrls: [\"./assessment-admin.component.css\"],\n})\nexport class AssessmentAdminComponent implements OnInit {\n  current: Current;\n  currentEmp: any;\n  currentEmpType: string;\n  currentIDs: number[];\n  index: number;\n  sub1: Subscription = new Subscription();\n  currentInterval = interval(2000);\n  currentAssessors: CurrentAssessor[];\n  i: number;\n  c: number;\n  next: boolean;\n  invalidTXT = \"\";\n  isValidNA = true;\n\n  cities: City[];\n  constructor(\n    public currentService: CurrentService,\n    public router: Router,\n    public assessorsService: AssessorsService,\n    private checkNAService: CheckNAService,\n    private cityService: CityService\n  ) {}\n\n  ngOnInit() {\n    this.cityService.getCities().subscribe((data: City[]) => {\n      this.cities = data;\n    });\n    this.currentService.getCurrent();\n\n    this.currentService.current$.subscribe((current: Current) => {\n      this.current = current;\n      if (current.emp_id == 1000) {\n        this.router.navigate([\"/finish-admin\"]);\n      } else {\n        this.currentEmpType = current.emp_type;\n        this.getCurrentIDs();\n        this.getAssessors();\n      }\n    });\n  }\n\n  getCurrentEmp() {\n    this.currentService.getCurrentEmp().subscribe((data) => {\n      if (data) {\n        this.currentEmp = data;\n      }\n    });\n  }\n\n  getCurrentIDs() {\n    this.currentService.getCurrentIDs().subscribe((data: number[]) => {\n      if (data) {\n        this.currentIDs = data;\n        this.index = data.indexOf(this.currentService.currentEmpID);\n        if (this.index < 0) {\n          this.nextEmp();\n        } else {\n          this.getCurrentEmp();\n        }\n      }\n    });\n  }\n\n  getAssessors() {\n    this.assessorsService.currentAssessors$.subscribe(\n      (data: CurrentAssessor[]) => {\n        this.currentAssessors = data;\n        this.i = 0;\n        this.c = 0;\n        data.forEach((assessor: CurrentAssessor) => {\n          this.i++;\n          if (Number(assessor.status) === 0) this.c++;\n\n          if (this.i == data.length) this.checkNext();\n        });\n      }\n    );\n    this.sub1 = this.currentInterval.subscribe((val) =>\n      this.assessorsService.currentAssessors()\n    );\n  }\n\n  checkNext() {\n    if (this.c > 0) {\n      this.next = false;\n    } else {\n      this.checkNAService\n        .checkNA(this.currentEmp.id, this.currentEmpType)\n        .subscribe((data: Review[]) => {\n          if (data) {\n            this.invalidTXT = \"\";\n            const a1 = data.filter((q) => Number(q.a1) !== 0);\n            const a2 = data.filter((q) => Number(q.a2) !== 0);\n            const a3 = data.filter((q) => Number(q.a3) !== 0);\n            const b1 = data.filter((q) => Number(q.b1) !== 0);\n            const b2 = data.filter((q) => Number(q.b2) !== 0);\n            const c = data.filter((q) => Number(q.c) !== 0);\n            this.invalidTXT += a1?.length;\n            this.invalidTXT += \" - \" + a2?.length;\n            this.invalidTXT += \" - \" + a3?.length;\n            this.invalidTXT += \" - \" + b1?.length;\n            this.invalidTXT += \" - \" + b2?.length;\n            this.invalidTXT += \" - \" + c?.length;\n            // console.log(\"a1 -> \", a1);\n            if (\n              a1?.length < 2 ||\n              a2?.length < 2 ||\n              a3?.length < 2 ||\n              b1?.length < 2 ||\n              b2?.length < 2 ||\n              c?.length < 2\n            ) {\n              this.isValidNA = false;\n            } else {\n              this.isValidNA = true;\n            }\n          }\n        });\n      this.next = true;\n      this.sub1.unsubscribe();\n    }\n  }\n\n  nextEmp() {\n    this.next = false;\n    this.invalidTXT = \"\";\n    if (this.index + 2 > this.currentIDs.length) {\n      this.currentService.nextEmp(1000).subscribe((res) => {\n        this.router.navigate([\"/finish-admin\"]);\n      });\n    } else {\n      this.index++;\n      this.currentService\n        .nextEmp(this.currentIDs[this.index])\n        .toPromise()\n        .then(\n          (res) => {\n            this.currentService\n              .getEmpByID(this.currentIDs[this.index])\n              .subscribe((data) => {\n                if (data) {\n                  this.currentEmp = data;\n                  this.sub1 = this.currentInterval.subscribe((val) =>\n                    this.assessorsService.currentAssessors()\n                  );\n                }\n              });\n          },\n          (err) => console.log(\"next -> \", err)\n        );\n    }\n  }\n\n  revoteFN(assessorID: number) {\n    this.next = false;\n    this.currentService\n      .revoteFN(assessorID, this.current.emp_id, this.current.emp_type)\n      .subscribe((res) => {\n        this.sub1 = this.currentInterval.subscribe((val) =>\n          this.assessorsService.currentAssessors()\n        );\n      });\n  }\n\n  deleteAssessorFN(id: number) {\n    this.assessorsService\n      .deleteAssessorFN(id)\n      .toPromise()\n      .catch((e) => console.log(\"delete assessor failed -->\", e));\n  }\n\n  getCity(id: string): string {\n    if (this.cities) {\n      const city = this.cities.find((c) => c.id === id);\n      return city?.city ? city.city : \"\";\n    }\n    return \"\";\n  }\n\n  ngOnDestroy() {\n    this.sub1.unsubscribe();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-finish-admin',\n  templateUrl: './finish-admin.component.html',\n  styleUrls: ['./finish-admin.component.css']\n})\nexport class FinishAdminComponent implements OnInit {\n\n  constructor(public router: Router) { }\n\n  ngOnInit() {\n  }\n\n  newAssessment()\n  {\n    this.router.navigate(['/setup'])\n  }\n}\n","<mat-card>\n  <h2>Assessment Finished!</h2>\n\n  <button mat-flat-button color=\"primary\" (click)=\"newAssessment()\">\n    New Assessment\n  </button>\n</mat-card>\n","<div class=\"container\">\n  <mat-card>\n    <h2>Entire Assessment</h2>\n\n    <div class=\"cardFooter1\">\n      <mat-button-toggle-group [(ngModel)]=\"type\">\n        <mat-button-toggle value=\"mr\">MR</mat-button-toggle>\n        <mat-button-toggle value=\"flsl\">FLL</mat-button-toggle>\n      </mat-button-toggle-group>\n      <button mat-stroked-button color=\"primary\" (click)=\"exportReports()\">\n        Extract\n      </button>\n    </div>\n  </mat-card>\n\n  <mat-card style=\"min-height: 400px;\">\n    <h2>Individual Report</h2>\n    <mat-form-field>\n      <input matInput [(ngModel)]=\"mudID\" placeholder=\"MUD ID\" />\n    </mat-form-field>\n    <mat-button-toggle-group [(ngModel)]=\"type\">\n      <mat-button-toggle value=\"mr\">MR</mat-button-toggle>\n      <mat-button-toggle value=\"flsl\">FLL</mat-button-toggle>\n    </mat-button-toggle-group>\n    <button mat-stroked-button color=\"primary\" (click)=\"findEMP()\">Find</button>\n\n    <div class=\"cardFooter2\">\n      \n    </div>\n  </mat-card>\n  <div class=\"imgCon\">\n    <img  src=\"assets/img/{{ selectedEmp?.mudID }}.jpg\" onError=\"this.src='assets/img/photo.jpg'\" width=\"100%\" />\n\n    <ng-contaier *ngIf=\"selectedEmp\">\n      <h4>{{ selectedEmp.name }}</h4>\n      <button mat-flat-button color=\"primary\" (click)='exportReport()'>Export Report</button>\n    </ng-contaier>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { CurrentService } from 'src/app/shared';\nimport { ReportsService } from \"./reports.service\";\n\n@Component({\n  selector: \"app-reports\",\n  templateUrl: \"./reports.component.html\",\n  styleUrls: [\"./reports.component.css\"],\n})\nexport class ReportsComponent implements OnInit {\n  selectedEmp: any;\n  assessedIDs: string[]\n  mudID: string\n  type = 'mr'\n  \n  constructor(private reportsService: ReportsService, private currentService: CurrentService) {}\n\n  async ngOnInit() {}\n\n  async exportReports() {\n    const reportsData: any = await this.reportsService.prepareReportsData(this.type);\n    console.log('reports data -----> ', reportsData)\n    const rawReport = await this.reportsService.getRawReport(\n      reportsData?.allAssessors,\n      reportsData?.allEmp,\n      reportsData?.allReviews\n    );\n    const scoredReport = await this.reportsService.getScoredReport(\n      reportsData?.allEmp,\n      reportsData?.allReviews\n    );\n    this.reportsService.exportReport(rawReport, scoredReport, this.type);\n  }\n\n  // async getAssessedIDs() {\n  //   const reviews = await this.reportsService.getTypeReviews(this.type).toPromise()\n  //   this.assessedIDs = [...new Set(reviews?.map((e) => String(e.emp_id)))];\n  // }\n\n  async findEMP() {\n    const allEmp = await this.currentService.getAllByType(this.type).toPromise()\n    this.selectedEmp = allEmp.find(e => e.mudID.toLowerCase() === this.mudID.toLowerCase())\n    console.log('selected emp -->', this.selectedEmp)\n  }\n\n  async exportReport() {\n    await this.reportsService.exportSingleReport(this.selectedEmp, this.type)\n    this.mudID = ''\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport {\n  AssessorsService,\n  CurrentService,\n  Review,\n  environment,\n} from \"src/app/shared\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\n\ninterface RawReport {\n  Name?: string;\n  Assessor: string;\n  Q1: number;\n  Q2: number;\n  Q3: number;\n  Q4: number;\n  Q5: number;\n  Q6: number;\n  comment: string;\n}\n\ninterface ScoredReport {\n  Name?: string;\n  Q1: number;\n  Q2: number;\n  Q3: number;\n  Q4: number;\n  Q5: number;\n  Q6: number;\n  Total: number;\n  office: string;\n}\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ReportsService {\n  fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  fileExtension = \".xlsx\";\n\n  constructor(\n    private assessorsService: AssessorsService,\n    private currentService: CurrentService,\n    private http: HttpClient\n  ) {}\n\n  getTypeReviews(type: string): Observable<Review[]> {\n    return this.http.post<Review[]>(environment.typeReviewsAPI, {type});\n  }\n\n  async prepareReportsData(type: string): Promise<any> {\n    const allAssessors = await this.assessorsService\n      .getAllAssessors()\n      .toPromise();\n    const allEmp = await this.currentService.getAllByType(type).toPromise();\n    const allReviews = await this.getTypeReviews(type).toPromise();\n    return { allAssessors, allEmp, allReviews };\n  }\n\n  async getRawReport(allAssessors, allEmp, allReviews) {\n    let reportData = [] as RawReport[];\n    allReviews.forEach((review: Review) => {\n      let report = {} as RawReport;\n      const emp = allEmp.find((m) => m.id == review.emp_id);\n      const assessor = allAssessors.find(\n        (a) => Number(a.id) == Number(review.assessor_id)\n      );\n      report.Name = emp?.name;\n      report.Assessor = assessor?.name;\n      report.Q1 = review.a1;\n      report.Q2 = review.a2;\n      report.Q3 = review.a3;\n      report.Q4 = review.b1;\n      report.Q5 = review.b2;\n      report.Q6 = review.c;\n      report.comment = review.comment;\n      reportData.push(report);\n    });\n    return reportData;\n  }\n\n  async getScoredReport(allEmp, allReviews): Promise<ScoredReport[]> {\n    let reportData = [] as ScoredReport[];\n    const IDs = [...new Set(allReviews.map((e) => e.emp_id as number))];\n    IDs?.forEach((id: number) => {\n      const reviews = allReviews.filter((r) => r.emp_id === id);\n      const emp = allEmp.find((m) => m.id === id);\n      let report = {} as ScoredReport;\n      report.Name = emp?.name;\n      report.office = emp?.office;\n      report.Q1 = 0;\n      report.Q2 = 0;\n      report.Q3 = 0;\n      report.Q4 = 0;\n      report.Q5 = 0;\n      report.Q6 = 0;\n      reviews?.forEach((review: Review) => {\n        report.Q1 += review.a1;\n        report.Q2 += review.a2;\n        report.Q3 += review.a3;\n        report.Q4 += review.b1;\n        report.Q5 += review.b2;\n        report.Q6 += review.c;\n      });\n      report.Q1 = Number((report.Q1 / reviews.length).toFixed(2));\n      report.Q2 = Number((report.Q2 / reviews.length).toFixed(2));\n      report.Q3 = Number((report.Q3 / reviews.length).toFixed(2));\n      report.Q4 = Number((report.Q4 / reviews.length).toFixed(2));\n      report.Q5 = Number((report.Q5 / reviews.length).toFixed(2));\n      report.Q6 = Number((report.Q6 / reviews.length).toFixed(2));\n      const sum =\n        report.Q1 + report.Q2 + report.Q3 + report.Q4 + report.Q5 + report.Q6;\n      report.Total = Number((sum / 6).toFixed(2));\n      reportData.push(report);\n    });\n    return reportData;\n  }\n\n  async exportReport(rawReport: RawReport[], scoredReport: ScoredReport[], type: string) {\n    const cols1 = [\n      { width: 30 },\n      { width: 30 },\n      { width: 7 },\n      { width: 7 },\n      { width: 7 },\n      { width: 7 },\n      { width: 7 },\n      { width: 7 },\n      { width: 30 },\n    ];\n    const cols2 = [\n      { width: 30 },\n      { width: 20 },\n      { width: 7 },\n      { width: 7 },\n      { width: 7 },\n      { width: 7 },\n      { width: 7 },\n      { width: 7 },\n      { width: 10 },\n    ];\n    let wb = XLSX.utils.book_new();\n    const sheet1: XLSX.WorkSheet = XLSX.utils.json_to_sheet(rawReport);\n    const sheet2: XLSX.WorkSheet = XLSX.utils.json_to_sheet(scoredReport);\n    sheet1[\"!cols\"] = cols1;\n    sheet2[\"!cols\"] = cols2;\n    XLSX.utils.book_append_sheet(wb, sheet1, \"Raw\");\n    XLSX.utils.book_append_sheet(wb, sheet2, \"Scored\");\n    const excelBuffer: any = XLSX.write(wb, {\n      bookType: \"xlsx\",\n      type: \"array\",\n    });\n    this.saveExcelFile(excelBuffer, type);\n    return;\n  }\n\n  saveExcelFile(buffer: any, fileName: string): void {\n    const data: Blob = new Blob([buffer], { type: this.fileType });\n    FileSaver.saveAs(data, fileName + this.fileExtension);\n  }\n\n  async exportSingleReport(emp: any, type: string) {\n    let reportData = [] as RawReport[];\n    const reviews: Review[] = await this.getTypeReviews(type).toPromise();\n    const empReviews = reviews?.filter((e: Review) => e.emp_type === type);\n    const allAssessors = await this.assessorsService\n      .getAllAssessors()\n      .toPromise();\n\n    empReviews.forEach((review: Review) => {\n      let report = {} as RawReport;\n      const assessor = allAssessors.find(\n        (a) => Number(a.id) == Number(review.assessor_id)\n      );\n      report.Assessor = assessor?.name;\n      report.Q1 = review.a1;\n      report.Q2 = review.a2;\n      report.Q3 = review.a3;\n      report.Q4 = review.b1;\n      report.Q5 = review.b2;\n      report.Q6 = review.c;\n      report.comment = review.comment;\n      reportData.push(report);\n    });\n    const cols1 = [\n      { width: 30 },\n      { width: 7 },\n      { width: 7 },\n      { width: 7 },\n      { width: 7 },\n      { width: 7 },\n      { width: 7 },\n      { width: 60 },\n    ];\n    let wb = XLSX.utils.book_new();\n    const sheet1: XLSX.WorkSheet = XLSX.utils.json_to_sheet(reportData);\n    sheet1[\"!cols\"] = cols1;\n    XLSX.utils.book_append_sheet(wb, sheet1, emp.mudID);\n    const excelBuffer: any = XLSX.write(wb, {\n      bookType: \"xlsx\",\n      type: \"array\",\n    });\n    this.saveExcelFile(excelBuffer, emp.mudID);\n    return;\n  }\n}\n","<section\n  style=\"min-height: 500px; padding-top: 0 !important; padding-bottom: 50px\"\n>\n  <div class=\"card\">\n    <h2>New Assessment</h2>\n    <mat-vertical-stepper #stepper *ngIf=\"clusters\">\n      <mat-step>\n        <ng-template matStepLabel>Cluster</ng-template>\n        <mat-form-field style=\"width: 100%\">\n          <mat-select (selectionChange)=\"chooseCluster($event)\" value=\"1\">\n            <mat-option *ngFor=\"let cluster of clusters\" [value]=\"cluster.id\">{{\n              cluster.cluster\n            }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <div>\n          <button mat-stroked-button matStepperNext>Next</button>\n        </div>\n      </mat-step>\n\n      <mat-step>\n        <ng-template matStepLabel>City</ng-template>\n        <mat-form-field style=\"width: 100%\">\n          <mat-select [(ngModel)]=\"cityID\">\n            <mat-option *ngFor=\"let city of citiesFiltered\" [value]=\"city.id\">{{\n              city.city\n            }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <div>\n          <button mat-stroked-button matStepperNext>Next</button>\n        </div>\n      </mat-step>\n\n      <mat-step>\n        <ng-template matStepLabel>Title</ng-template>\n        <mat-form-field style=\"width: 100%\">\n          <mat-select [(ngModel)]=\"data.emp_type\">\n            <mat-option value=\"sll\">Choose</mat-option>\n            <mat-option value=\"mr\">MR</mat-option>\n            <mat-option value=\"flsl\">FLSL</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <div>\n          <button mat-stroked-button (click)=\"startAssessment()\">Next</button>\n        </div>\n      </mat-step>\n    </mat-vertical-stepper>\n  </div>\n</section>\n","import { Component, OnInit } from \"@angular/core\";\nimport {\n  CurrentService,\n  Cluster,\n  ClustersService,\n  CityService,\n  City,\n} from \"../../shared\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-setup\",\n  templateUrl: \"./setup.component.html\",\n  styleUrls: [\"./setup.component.css\"],\n})\nexport class SetupComponent implements OnInit {\n  clusters: Cluster[];\n  cities: City[];\n  citiesFiltered: City[];\n  cityID = \"1\";\n  data = { cityID: 1, emp_id: 1, emp_type: \"mr\" };\n\n  constructor(\n    public currentService: CurrentService,\n    public clustersService: ClustersService,\n    private cityService: CityService,\n    public router: Router\n  ) {}\n\n  ngOnInit() {\n    this.clustersService.getClusters().subscribe((data: Cluster[]) => {\n      this.clusters = data;\n    });\n    this.cityService.getCities().subscribe((data: City[]) => {\n      this.cities = data;\n      this.citiesFiltered = data;\n    });\n  }\n\n  startAssessment() {\n    this.data.cityID = Number(this.cityID);\n    this.currentService.updateCurrent(this.data).subscribe(\n      (res) => {\n        console.log(res);\n        this.currentService.getCurrent();\n\n        if (res) this.router.navigate([\"/assessment-admin\"]);\n      },\n      (err) => console.log(err)\n    );\n  }\n\n  chooseCluster(e) {\n    console.log(\"cluster change ->\", e.value);\n    this.citiesFiltered = this.cities.filter((c) => c.clusterID === e.value);\n    this.cityID = this.citiesFiltered[0]?.id;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  typesAPI: \"http://localhost:8080/gsk/types.php\",\n  assessorsAPI: \"http://localhost:8080/gsk/assessors.php\",\n  currentAPI: \"http://localhost:8080/gsk/current.php\",\n  empDataAPI: \"http://localhost:8080/gsk/emp.php\",\n  reviewAPI: \"http://localhost:8080/gsk/review.php\",\n  updateCurrentAPI: \"http://localhost:8080/gsk/updateCurrent.php\",\n  clustersAPI: \"http://localhost:8080/gsk/clusters.php\",\n  cityAPI: \"http://localhost:8080/gsk/city.php\",\n  currentIDsAPI: \"http://localhost:8080/gsk/currentIDs.php\",\n  nextEmpAPI: \"http://localhost:8080/gsk/nextEmp.php\",\n  assessorLoginAPI: \"http://localhost:8080/gsk/assessorLogin.php\",\n  currentAssessorsAPI: \"http://localhost:8080/gsk/currentAssessors.php\",\n  revoteAPI: \"http://localhost:8080/gsk/revote.php\",\n  skipAPI: \"http://localhost:8080/gsk/skip.php\",\n  statusAPI: \"http://localhost:8080/gsk/status.php\",\n  deleteAssessorAPI: \"http://localhost:8080/gsk/deleteAssessor.php\",\n  deleteAllAssessorsAPI: \"http://localhost:8080/gsk/deleteAllAssessors.php\",\n  resetAPI: \"http://localhost:8080/gsk/reset.php\",\n  NAcheckAPI: \"http://localhost:8080/gsk/checkNA.php\",\n  mrReviewsAPI: \"http://localhost:8080/gsk/mrReviews.php\",\n  typeReviewsAPI: \"http://localhost:8080/gsk/typeReviews.php\",\n  allAssessorsAPI: \"http://localhost:8080/gsk/allAssessors.php\",\n  allMrAPI: \"http://localhost:8080/gsk/allMR.php\",\n  allFllAPI: \"http://localhost:8080/gsk/allFLL.php\",\n  allByTypeAPI: \"http://localhost:8080/gsk/allByType.php\",\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { NgModule } from \"@angular/core\";\nimport { A11yModule } from \"@angular/cdk/a11y\";\nimport { PortalModule } from \"@angular/cdk/portal\";\nimport { CdkStepperModule } from \"@angular/cdk/stepper\";\nimport { MatAutocompleteModule } from \"@angular/material/autocomplete\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatStepperModule } from \"@angular/material/stepper\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatTabsModule } from \"@angular/material/tabs\";\nimport { MatGridListModule } from \"@angular/material/grid-list\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatButtonToggleModule } from \"@angular/material/button-toggle\";\n\n@NgModule({\n  exports: [\n    A11yModule,\n    CdkStepperModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatStepperModule,\n    MatIconModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatSelectModule,\n    MatTabsModule,\n    PortalModule,\n    MatGridListModule,\n    MatToolbarModule,\n    MatButtonToggleModule,\n  ],\n})\nexport class MaterialModule {}\n\n/**  Copyright 2019 Google LLC. All Rights Reserved.\n    Use of this source code is governed by an MIT-style license that\n    can be found in the LICENSE file at http://angular.io/license */\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AssessorService {\n  assessorID: number;\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\nimport { Assessor } from '../models/assessorInterface';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../environments/environment';\nimport { CurrentAssessor } from '../models/currentAssessorInterface';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AssessorsService {\n  currentAssessors$ = new BehaviorSubject<CurrentAssessor[]>([]);\n  constructor(public http: HttpClient) {}\n\n  getAllAssessors(): Observable<Assessor[]>\n  {\n    return this.http.get<Assessor[]>(environment.allAssessorsAPI);\n  }\n\n  getAssessors(id: number): Observable<Assessor[]>\n  {\n    return this.http.post<Assessor[]>(environment.assessorsAPI, {\"id\": id});\n  }\n\n  getAssessorByID(id: number): Observable<Assessor> {\n    return this.http.post<Assessor>(environment.empDataAPI, {emp_type: \"assessors\", emp_id: id});\n  }\n\n  assessorLogin(assessor: Assessor): Observable<any> {\n    return this.http.post(environment.assessorLoginAPI, assessor);\n  }\n\n  currentAssessors() {\n    this.http.get<CurrentAssessor[]>(environment.currentAssessorsAPI).subscribe((data: CurrentAssessor[]) => {\n      if(data)\n      {\n        this.currentAssessors$.next(data);\n      }\n    });\n  }\n\n  deleteAllAssessors(): Observable<any> {\n    return this.http.post(environment.deleteAllAssessorsAPI, {});\n  }\n\n  deleteAssessorFN(id: number): Observable<any> {\n    return this.http.post(environment.deleteAssessorAPI, {assessor_id: id});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Review } from '../models/reviewInterface';\nimport { environment } from 'src/app/shared/environments/environment';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CheckNAService {\n\n  constructor(public http: HttpClient) { }\n\n  checkNA(id: string, type: string): Observable<Review[]> {\n    return this.http.post<Review[]>(environment.NAcheckAPI, {empID: id, empType: type});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { City } from '../models/city.interface';\nimport { environment } from 'src/app/shared/environments/environment';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CityService {\n  clusters: City[];\n  constructor(public http: HttpClient) { }\n\n  getCities(): Observable<City[]> {\n    return this.http.get<City[]>(environment.cityAPI);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Cluster } from '../models/cluster.interface';\nimport { environment } from 'src/app/shared/environments/environment';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClustersService {\n  clusters: Cluster[];\n  constructor(public http: HttpClient) { }\n\n  getClusters(): Observable<Cluster[]> {\n    return this.http.get<Cluster[]>(environment.clustersAPI);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Current } from \"../models/currentInterface\";\nimport { environment } from \"../environments/environment\";\nimport { Observable, of, BehaviorSubject, Subject } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class CurrentService {\n  current$ = new BehaviorSubject<Current>({\n    cityID: 1,\n    emp_id: 0,\n    emp_type: \"mr\",\n  });\n  currentEmp: any;\n  show$ = new BehaviorSubject<boolean>(false);\n  show = false;\n  currentEmpID = 0;\n  currentEmpType = \"mr\";\n  currentCityID = 1;\n  currentAssessorID: number;\n\n  constructor(public http: HttpClient) {\n    this.getCurrent();\n  }\n\n  getAllMR(): Observable<any[]> {\n    return this.http.get<any[]>(environment.allMrAPI);\n  }\n\n  getAllFLL(): Observable<any[]> {\n    return this.http.get<any[]>(environment.allFllAPI);\n  }\n\n  getAllByType(type: string) {\n    if (type) {\n      return this.http.post<any[]>(environment.allByTypeAPI, { type });\n    } else {\n      return of([]);\n    }\n  }\n\n  getCurrent() {\n    this.http\n      .get<Current>(environment.currentAPI)\n      .subscribe((data: Current) => {\n        console.log(\"Current -> \", data);\n        if (data.emp_id != this.currentEmpID) {\n          this.currentEmpID = data.emp_id;\n          this.currentEmpType = data.emp_type;\n          this.currentCityID = data.cityID;\n          this.current$.next(data);\n        }\n      });\n  }\n\n  getCurrentEmp(): any {\n    console.log(this.currentEmpID + \"  \" + this.currentEmpType);\n    return this.http.post(environment.empDataAPI, {\n      id: this.currentEmpID,\n      emp_type: this.currentEmpType,\n    });\n  }\n\n  getEmpByID(id: number): any {\n    return this.http.post(environment.empDataAPI, {\n      id: id,\n      emp_type: this.currentEmpType,\n    });\n  }\n\n  getCurrentIDs(): Observable<number[]> {\n    if (this.currentEmpType) {\n      return this.http.post<number[]>(environment.currentIDsAPI, {\n        emp_type: this.currentEmpType,\n        cityID: this.currentCityID,\n      });\n    } else {\n      return of([]);\n    }\n  }\n\n  updateCurrent(data: Current): Observable<any> {\n    return this.http.post(environment.updateCurrentAPI, data);\n  }\n\n  nextEmp(id: number) {\n    return this.http.post(environment.nextEmpAPI, { id: id });\n  }\n\n  currentStatusFN(id: number): Observable<any> {\n    return this.http.post<any>(environment.statusAPI, { assessor_id: id });\n  }\n\n  revoteFN(\n    assessor_id: number,\n    emp_id: number,\n    emp_type: string\n  ): Observable<any> {\n    console.log(assessor_id + \"  \" + emp_id + \" \" + emp_type);\n    return this.http.post(environment.revoteAPI, {\n      assessor_id,\n      emp_id,\n      emp_type,\n    });\n  }\n\n  resetFN(): Observable<any> {\n    return this.http.post(environment.resetAPI, {});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Review } from '../models/reviewInterface';\nimport { environment } from 'src/app/shared/environments/environment';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReportService {\n\n  constructor(private http: HttpClient) { }\n\n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Review } from '../models/reviewInterface';\nimport { environment } from 'src/app/shared/environments/environment';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReviewService {\n\n  constructor(public http: HttpClient) { }\n\n  submitReview(review: Review): Observable<any>\n  {\n    console.log(review);\n    return this.http.post(environment.reviewAPI, review);\n  }\n\n  skipReviewFN(id: number): Observable<any> {\n    return this.http.post(environment.skipAPI, {assessor_id: id})\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Type } from '../models/typeInterface';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TypesService {\n  url: string = environment.typesAPI;\n\n  constructor(public http: HttpClient) {}\n\n  getTypes(): Observable<Type[]> {\n    return this.http.get<Type[]>(this.url);\n  }\n}\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from 'src/app/shared/environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"]}